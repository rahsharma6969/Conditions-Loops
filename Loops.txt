What are loops, and what do we need them? Explain different types of loops with their syntax and
examples.


### Loops:
Loops are programming structures that allow you to repeat a block of code multiple times based on a condition. They are essential because they reduce redundancy and make it easier to perform repetitive tasks efficiently.

### Types of Loops:

1. **for loop**:
   The `for` loop iterates over a sequence (like a list, tuple, or range) and executes a block of code for each item.

   **Syntax**:
   ```python
   for item in sequence:
       # code to be executed
   ```

   **Example**:
   ```python
   for i in range(5):
       print(i)
   ```
   Output:
   ```
   0
   1
   2
   3
   4
   ```

2. **while loop**:
   The `while` loop continues executing a block of code as long as a given condition is true.

   **Syntax**:
   ```python
   while condition:
       # code to be executed
   ```

   **Example**:
   ```python
   count = 0
   while count < 5:
       print(count)
       count += 1
   ```
   Output:
   ```
   0
   1
   2
   3
   4
   ```

3. **nested loops**:
   A loop inside another loop is called a nested loop. It's used when you need to perform repetitive tasks within a repetitive task.

   **Syntax**:
   ```python
   for item1 in sequence1:
       for item2 in sequence2:
           # code to be executed
   ```

   **Example**:
   ```python
   for i in range(3):
       for j in range(2):
           print(i, j)
   ```
   Output:
   ```
   0 0
   0 1
   1 0
   1 1
   2 0
   2 1
   ```

### Why We Need Loops:
Loops help automate repetitive tasks without the need for writing repetitive code, improving code readability, maintainability, and efficiency.